default-task = 'build'
version = 0.1

[[task]]
deps = [':cpp:', ':go:', ':dart:', ':ghc:', ':racket:', ':deno:', ':rust:']
name = 'build'

[[task]]
name = 'cpp:#'
dep = 'cpp/#.cpp'
target = './build/#-cpp'
run = '''
g++ $DEP -std=c++11 -o $TARGET -O2 -lgmp
'''

[[task]]
name = 'go:#'
dep = 'go/#.go'
target = './build/#-go'
run = '''
  go build -o $TARGET $DEP
'''

[[task]]
name = 'dart:#'
dep = 'dart/#.dart'
target = './build/#-dart.exe'
run = '''
  dart compile exe $DEP -o $TARGET
'''

[[task]]
name = 'ghc:#'
dep = 'haskell/#.hs'
target = './build/#-ghc'
run = '''
  ghc -outputdir ./build $DEP -o $TARGET
'''

[[task]]
name = 'racket:#'
dep = 'racket/#.rkt'
target = './build/#-racket'
run = '''
  raco exe -o $TARGET $DEP
'''

[[task]]
name = 'deno:#'
dep = 'ts/#.ts'
target = './build/#-deno'
run = '''
  deno compile --unstable --allow-env --allow-read -o $TARGET $DEP
'''

[[task]]
name = 'rust:#'
dep = 'rust/#.rs'
target = './build/#-rust'
run = '''
  cargo build --release --bin $MATCH
  cp ./rust/target/release/$MATCH ./build/$MATCH-rust
'''

[[task]]
name = 'odin:#'
dep = 'odin/#.odin'
target = './build/#-odin'
run = '''
  odin build $DEP -file -out:$TARGET
'''

[[task]]
name = 'bench'
deps = [':bench:fact', ':bench:pow', ':bench:hello']
serial = true
validation = 'none'

[[task]]
name = 'bench:fact'
deps = [':cpp:fact', ':go:fact', ':dart:fact', ':ghc:fact', ':racket:fact', ':deno:fact', ':rust:fact']
invalidation = 'always'
serial = true
validation = 'none'
run = '''
  hyperfine --warmup 3 -iN\
    --export-markdown fact.md\
    --export-csv fact.csv\
    './build/fact-cpp'\
    './build/fact-rust'\
    './build/fact-go'\
    './build/fact-ghc'\
    './build/fact-deno'\
    './build/fact-racket'\
    './build/fact-dart.exe'\
    'bc ./bc/fact.bc'\
    'bun ./js/fact.js'\
    'bun ./ts/fact.ts'\
    'deno run ./js/fact.js'\
    'deno run ./ts/fact.ts'\
    'node ./js/fact.js'\
    'tsx ./ts/fact.ts'\
    'python3 ./python/fact.py'\
    'ruby ./ruby/fact.rb'\
    'racket ./racket/fact.rkt'\
    # 'cargo run --bin fact'\
    # 'julia ./julia/fact.jl'\
    # 'go run go/fact.go'\
    # 'runhaskell haskell/fact.hs'\
    # 'dart ./dart/fact.dart'\
    # 'ts-node ./ts/fact.ts'\
    # 'wolframscript ./wolfram/fact.wls'\
    # 'wolframscript -cloud ./wolfram/fact.wls'
'''

[[task]]
name = 'bench:pow'
deps = [':cpp:pow', ':deno:pow', ':rust:pow', ':odin:pow']
invalidation = 'always'
serial = true
validation = 'none'
run = '''
  hyperfine --warmup 3 -i -N\
    --export-markdown pow.md\
    --export-csv pow.csv\
    './build/pow-cpp'\
    './build/pow-rust'\
    './build/pow-deno'\
    './build/pow-odin'\
    'bc ./bc/pow.bc'\
    'bun ./js/pow.js'\
    'bun ./ts/pow.ts'\
    'deno run ./js/pow.js'\
    'deno run ./ts/pow.ts'\
    'node ./js/pow.js'\
    'tsx ./ts/pow.ts'\
    'ts-node ./ts/pow.ts'\
    'R -f ./r/pow.r -q'\
    # 'odin run ./odin/pow.odin -file -out:./build/pow-odin'
'''

[[task]]
name = 'bench:hello'
deps = [':cpp:hello', ':rust:hello', ':deno:hello', ':racket:hello', ':go:hello', ':ghc:hello']
invalidation = 'always'
serial = true
validation = 'none'
run = '''
  hyperfine --warmup 3 -i -N\
    --export-markdown hello.md\
    --export-csv hello.csv\
    './build/hello-cpp'\
    './build/hello-rust'\
    './build/hello-go'\
    './build/hello-ghc'\
    './build/hello-deno'\
    './build/hello-racket'\
    'bc ./bc/hello.bc'\
    'bun ./js/hello.js'\
    'bun ./ts/hello.ts'\
    'deno run ./js/hello.js'\
    'deno run ./ts/hello.ts'\
    'node ./js/hello.js'\
    'tsx ./ts/hello.ts'\
    'python3 ./python/hello.py'\
    'ruby ./ruby/hello.rb'\
    'racket ./racket/hello.rkt'
'''
