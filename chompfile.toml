default-task = 'build'
version = 0.1

[[task]]
deps = [':cpp:', ':go:', ':dart:', ':ghc:', ':racket:', ':deno:', ':rust:']
name = 'build'

[[task]]
dep = 'cpp/#.cpp'
name = 'cpp:#'
run = '''
g++ $DEP -std=c++11 -o $TARGET -O2 -lgmp
'''
target = './build/#-cpp'

[[task]]
dep = 'go/#.go'
name = 'go:#'
run = '''
  go build -o $TARGET $DEP
'''
target = './build/#-go'

[[task]]
dep = 'dart/#.dart'
name = 'dart:#'
run = '''
  dart compile exe $DEP -o $TARGET
'''
target = './build/#-dart.exe'

[[task]]
dep = 'haskell/#.hs'
name = 'ghc:#'
run = '''
  ghc -outputdir ./build $DEP -o $TARGET
'''
target = './build/#-ghc'

[[task]]
dep = 'racket/#.rkt'
name = 'racket:#'
run = '''
  raco exe -o $TARGET $DEP
'''
target = './build/#-racket'

[[task]]
dep = 'ts/#.ts'
name = 'deno:#'
run = '''
  deno compile --unstable --allow-env --allow-read -o $TARGET $DEP
'''
target = './build/#-deno'

[[task]]
dep = 'rust/#.rs'
name = 'rust:#'
run = '''
  cargo build --release --bin $MATCH
  cp ./rust/target/release/$MATCH ./build/$MATCH-rust
'''
target = './build/#-rust'

[[task]]
name = 'bench:fact'
deps = [':cpp:fact', ':go:fact', ':dart:fact', ':ghc:fact', ':racket:fact', ':deno:fact', ':rust:fact']
invalidation = 'always'
serial = true
validation = 'none'
run = '''
  hyperfine --warmup 3 -iN\
    --export-markdown fact.md\
    './build/fact-cpp'\
    './build/fact-rust'\
    './build/fact-go'\
    'bc ./bc/fact.bc'\
    'bun ./js/fact.js'\
    'bun ./ts/fact.ts'\
    './build/fact-deno'\
    'deno run ./js/fact.js'\
    'deno run ./ts/fact.ts'\
    './build/fact-ghc'\
    'python3 ./python/fact.py'\
    'node ./js/fact.js'\
    './build/fact-racket'\
    'ruby ./ruby/fact.rb'\
    'racket ./racket/fact.rkt'\
    'cargo run --bin fact'\
    'julia ./julia/fact.jl'\
    'go run go/fact.go'\
    'runhaskell haskell/fact.hs'\
    './build/fact-dart.exe'\
    'dart ./dart/fact.dart'\
    'ts-node ./ts/fact.ts'\
    'wolframscript ./wolfram/fact.wls'\
    'tsx ./ts/fact.ts'\
'''

[[task]]
name = 'bench:pow'
deps = [':cpp:pow', ':deno:pow', ':rust:pow']
invalidation = 'always'
serial = true
validation = 'none'
run = '''
  hyperfine --warmup 3 -iN\
    --export-markdown pow.md\
    './build/pow-cpp'\
    './build/pow-rust'\
    'bun ./js/pow.js'\
    'bun ./ts/pow.ts'\
    './build/pow-deno'\
    'deno run ./js/pow.js'\
    'deno run ./ts/pow.ts'\
    'node ./js/pow.js'\
    'ts-node ./ts/pow.ts'\
    'tsx ./ts/pow.ts'\
'''
